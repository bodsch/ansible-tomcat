---

- name: download artefacts
  block:
    - name: get checksum for tomcat-{{ tomcat_version }}
      become: false
      ansible.builtin.get_url:
        url: "{{ tomcat_download_url }}.sha512"
        dest: "{{ tomcat_local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz.sha512"
        mode: 0640
      register: _download_checksum
      until: _download_checksum is succeeded
      retries: 5
      delay: 0
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: extract checksum
      ansible.builtin.set_fact:
        tomcat_checksum: "{{ tomcat_checksums[0].split()[0] }}"
      vars:
        tomcat_checksums: '{{ lookup("file", "{{ tomcat_local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz.sha512").splitlines() |
          select("match", ".*apache-tomcat.*.tar.gz$") | list }}'

    - name: check for downloaded tomcat
      become: false
      ansible.builtin.stat:
        path: "{{ tomcat_local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
      register: _downloaded_tomcat

    - name: compute tomcat checksum
      become: false
      ansible.builtin.stat:
        path: "{{ tomcat_local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
        checksum_algorithm: sha512
      delegate_to: localhost
      register: _downloaded_tomcat_checksum
      when:
        - _downloaded_tomcat is defined
        - _downloaded_tomcat.stat.exists

    - name: download tomcat binary to local folder
      become: false
      ansible.builtin.get_url:
        url: "{{ tomcat_download_url }}"
        dest: "{{ tomcat_local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
        checksum: 'sha512:{{ tomcat_checksum }}'
        mode: 0640
      register: _download_artefact
      until: _download_artefact is succeeded
      retries: 5
      delay: 0
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat
      when: (
        ( _downloaded_tomcat is defined and
           not _downloaded_tomcat.stat.exists) or
        ( tomcat_checksum != _downloaded_tomcat_checksum.stat.checksum) )

    - name: deploy tomcat archiv
      ansible.builtin.copy:
        src: "{{ tomcat_local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ deployment_tmp_directory }}"
        mode: 0640
      tags:
        - tomcat

- name: download extras for jmx remote
  when:
    - tomcat_major_version | int <= 9
    - tomcat_patch_version | int <= 14
  block:
    - name: get checksum for catalina-jmx-remote.jar
      become: false
      ansible.builtin.get_url:
        url: "{{ tomcat_extra_jmx_url }}.sha512"
        dest: "{{ tomcat_local_tmp_directory }}/catalina-jmx-remote.jar.sha512"
        mode: 0640
      register: _download_checksum
      until: _download_checksum is succeeded
      retries: 5
      delay: 0
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: extract checksum
      ansible.builtin.set_fact:
        catalina_jmx_checksum: "{{ catalina_jmx_checksums[0].split()[0] }}"
      vars:
        catalina_jmx_checksums: '{{ lookup("file", "{{ tomcat_local_tmp_directory }}/catalina-jmx-remote.jar.sha512").splitlines() |
          select("match", ".*catalina-jmx-remote.jar$") | list }}'

    - name: check for downloaded catalina_jmx
      become: false
      ansible.builtin.stat:
        path: "{{ tomcat_local_tmp_directory }}/catalina-jmx-remote.jar"
      register: _downloaded_catalina_jmx

    - name: compute catalina_jmx checksum
      become: false
      ansible.builtin.stat:
        path: "{{ tomcat_local_tmp_directory }}/catalina-jmx-remote.jar"
        checksum_algorithm: sha512
      delegate_to: localhost
      register: _downloaded_catalina_jmx_checksum
      when:
        - _downloaded_catalina_jmx is defined
        - _downloaded_catalina_jmx.stat.exists

    - name: download catalina-jmx-remote.jar to local folder
      become: false
      ansible.builtin.get_url:
        url: "{{ tomcat_extra_jmx_url }}"
        dest: "{{ tomcat_local_tmp_directory }}/catalina-jmx-remote.jar"
        checksum: "sha512:{{ catalina_jmx_checksum }}"
        mode: 0640
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 0
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: propagate catalina-jmx-remote.jar
      ansible.builtin.copy:
        src: "{{ tomcat_local_tmp_directory }}/catalina-jmx-remote.jar"
        dest: "{{ deployment_tmp_directory }}"
        mode: 0640
      tags:
        - tomcat
