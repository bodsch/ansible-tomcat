---

- name: create deployment temporary directory
  file:
    path: "{{ deployment_tmp_directory }}"
    state: directory
    mode: 0750

- name: create local temporary directory
  become: false
  file:
    path: "{{ local_tmp_directory }}"
    state: directory
    mode: 0750
  delegate_to: localhost

- block:
    - name: "get checksum for tomcat-{{ tomcat_version }}"
      get_url:
        url: "{{ tomcat_download_url }}.sha512"
        dest: "{{ local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz.sha512"
      register: _download_checksum
      until: _download_checksum is succeeded
      retries: 5
      delay: 0
      # run_once: true
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: download tomcat binary to local folder
      become: false
      get_url:
        url: "{{ tomcat_download_url }}"
        dest: "{{ local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
        checksum: 'sha512:{{ tomcat_checksums[0].split()[0] }}'
      vars:
        tomcat_checksums: '{{ lookup("file", "{{ local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz.sha512").splitlines() |
          select("match", ".*apache-tomcat.*.tar.gz$") | list }}'
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 0
      # run_once: true
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: propagate tomcat archiv
      copy:
        src: "{{ local_tmp_directory }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ deployment_tmp_directory }}"
      tags:
        - tomcat

- block:
    - name: "get checksum for catalina-jmx-remote.jar"
      get_url:
        url: "{{ tomcat_extra_jmx_url }}.sha512"
        dest: "{{ local_tmp_directory }}/catalina-jmx-remote.jar.sha512"
      register: _download_checksum
      until: _download_checksum is succeeded
      retries: 5
      delay: 0
      # run_once: true
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: download catalina-jmx-remote.jar to local folder
      become: false
      get_url:
        url: "{{ tomcat_extra_jmx_url }}"
        dest: "{{ local_tmp_directory }}/catalina-jmx-remote.jar"
        checksum: "sha512:{{ catalina_jmx_checksums[0].split()[0] }}"
      vars:
        catalina_jmx_checksums: '{{ lookup("file", "{{ local_tmp_directory }}/catalina-jmx-remote.jar.sha512").splitlines() |
          select("match", ".*catalina-jmx-remote.jar$") | list }}'
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 0
      # run_once: true
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: propagate catalina-jmx-remote.jar
      copy:
        src: "{{ local_tmp_directory }}/catalina-jmx-remote.jar"
        dest: "{{ deployment_tmp_directory }}"
      tags:
        - tomcat

- block:

    - name: download coremedia related jar files
      become: false
      get_url:
        url: "{{ tomcat_artefact_url }}/{{ item.src }}"
        dest: "{{ local_tmp_directory }}"
        checksum: "sha1:{{ item.checksum }}"
      with_items:
        "{{ tomcat_files }}"
      register: _download_artefact
      until: _download_artefact is succeeded
      retries: 5
      delay: 2
      # run_once: true
      delegate_to: localhost
      check_mode: false
      tags:
        - tomcat

    - name: propagate coremedia related jar files
      copy:
        src: "{{ local_tmp_directory }}/{{ item.src }}"
        dest: "{{ deployment_tmp_directory }}"
        checksum: "{{ item.checksum }}"
      with_items:
        "{{ tomcat_files }}"
      tags:
        - tomcat

  when: tomcat_artefact_url is defined and tomcat_artefact_url | length != 0
